#BlueJ class context
comment0.params=
comment0.target=Canvas\ getCanvas()
comment0.text=\r\n\ Factory\ method\ to\ get\ the\ canvas\ singleton\ object.\r\n
comment1.params=title\ width\ height\ bgColour
comment1.target=Canvas(java.lang.String,\ int,\ int,\ java.awt.Color)
comment1.text=\r\n\ Create\ a\ Canvas.\r\n\ @param\ title\ \ title\ to\ appear\ in\ Canvas\ Frame\r\n\ @param\ width\ \ the\ desired\ width\ for\ the\ canvas\r\n\ @param\ height\ \ the\ desired\ height\ for\ the\ canvas\r\n\ @param\ bgClour\ \ the\ desired\ background\ colour\ of\ the\ canvas\r\n
comment2.params=visible
comment2.target=void\ setVisible(boolean)
comment2.text=\r\n\ Set\ the\ canvas\ visibility\ and\ brings\ canvas\ to\ the\ front\ of\ screen\r\n\ when\ made\ visible.\ This\ method\ can\ also\ be\ used\ to\ bring\ an\ already\r\n\ visible\ canvas\ to\ the\ front\ of\ other\ windows.\r\n\ @param\ visible\ \ boolean\ value\ representing\ the\ desired\ visibility\ of\r\n\ the\ canvas\ (true\ or\ false)\ \r\n
comment3.params=referenceObject\ color\ shape
comment3.target=void\ draw(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment3.text=\r\n\ Draw\ a\ given\ shape\ onto\ the\ canvas.\r\n\ @param\ \ referenceObject\ \ an\ object\ to\ define\ identity\ for\ this\ shape\r\n\ @param\ \ color\ \ \ \ \ \ \ \ \ \ \ \ the\ color\ of\ the\ shape\r\n\ @param\ \ shape\ \ \ \ \ \ \ \ \ \ \ \ the\ shape\ object\ to\ be\ drawn\ on\ the\ canvas\r\n
comment4.params=referenceObject
comment4.target=void\ erase(java.lang.Object)
comment4.text=\r\n\ Erase\ a\ given\ shape's\ from\ the\ screen.\r\n\ @param\ \ referenceObject\ \ the\ shape\ object\ to\ be\ erased\ \r\n
comment5.params=colorString
comment5.target=void\ setForegroundColor(java.lang.String)
comment5.text=\r\n\ Set\ the\ foreground\ colour\ of\ the\ Canvas.\r\n\ @param\ \ newColour\ \ \ the\ new\ colour\ for\ the\ foreground\ of\ the\ Canvas\ \r\n
comment6.params=milliseconds
comment6.target=void\ wait(int)
comment6.text=\r\n\ Wait\ for\ a\ specified\ number\ of\ milliseconds\ before\ finishing.\r\n\ This\ provides\ an\ easy\ way\ to\ specify\ a\ small\ delay\ which\ can\ be\r\n\ used\ when\ producing\ animations.\r\n\ @param\ \ milliseconds\ \ the\ number\ \r\n
comment7.params=
comment7.target=void\ redraw()
comment7.text=\r\n\ Redraw\ ell\ shapes\ currently\ on\ the\ Canvas.\r\n
comment8.params=
comment8.target=void\ erase()
comment8.text=\r\n\ Erase\ the\ whole\ canvas.\ (Does\ not\ repaint.)\r\n
numComments=9
